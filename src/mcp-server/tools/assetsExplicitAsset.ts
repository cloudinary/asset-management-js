/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { assetsExplicitAsset } from "../../funcs/assetsExplicitAsset.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.ExplicitAssetRequest$inboundSchema,
};

export const tool$assetsExplicitAsset: ToolDefinition<typeof args> = {
  name: "assets-explicit-asset",
  description: `Apply operations on an existing asset

Applies actions such as transformations, tags, or metadata updates to an existing asset without re-uploading it.
This is useful for applying new transformations, adding tags, or updating metadata on assets that are already in your cloud.
`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await assetsExplicitAsset(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
