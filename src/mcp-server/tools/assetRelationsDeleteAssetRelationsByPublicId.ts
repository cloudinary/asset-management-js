/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { assetRelationsDeleteAssetRelationsByPublicId } from "../../funcs/assetRelationsDeleteAssetRelationsByPublicId.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.DeleteAssetRelationsByPublicIdRequest$inboundSchema,
};

export const tool$assetRelationsDeleteAssetRelationsByPublicId: ToolDefinition<
  typeof args
> = {
  name: "asset-relations-delete-asset-relations-by-public-id",
  description: `Delete asset relations by public ID

Unrelates the asset from other assets, specified by public IDs. This is a bidirectional process, meaning that the asset will also be removed as a related_asset from all the other assets specified.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] =
      await assetRelationsDeleteAssetRelationsByPublicId(
        client,
        args.request,
        { fetchOptions: { signal: ctx.signal } },
      ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
