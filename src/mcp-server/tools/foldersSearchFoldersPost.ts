/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { foldersSearchFoldersPost } from "../../funcs/foldersSearchFoldersPost.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.SearchFoldersPostRequest$inboundSchema,
};

export const tool$foldersSearchFoldersPost: ToolDefinition<typeof args> = {
  name: "folders-search-folders-post",
  description: `Searches for folders in your product environment

Lists the folders that match the specified search expression. Limited to 2000 results. If no parameters are passed, returns the 50 most recently created folders in descending order of creation time.
`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await foldersSearchFoldersPost(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
