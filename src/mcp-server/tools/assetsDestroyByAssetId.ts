/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { assetsDestroyByAssetId } from "../../funcs/assetsDestroyByAssetId.js";
import * as components from "../../models/components/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: components.DestroyRequest$inboundSchema,
};

export const tool$assetsDestroyByAssetId: ToolDefinition<typeof args> = {
  name: "delete-asset",
  description:
    `Purpose: Permanently deletes a media asset from your Cloudinary account using its unique asset identifier. This operation removes the asset from storage, invalidates CDN caches, and cleans up any derived assets or transformations associated with the original asset.
Usage: Use when you need to permanently remove assets that are no longer needed, comply with data retention policies, or manage storage quotas. Essential for content management workflows such as removing outdated marketing materials, deleting test uploads, or handling user-requested content deletion.
Example request: {"asset_id": "fa4272ac98d1400f2982fada9dd5a8cf", "invalidate": true, "timestamp": 1749416056, "signature": "71d37b1b636a61c42c2d5b9f17139cac47e67906", "api_key": "123456789"}
Note: The signature must be generated by concatenating parameters in alphabetical order and appending the API secret. For example: "asset_id=abc123&invalidate=true&timestamp=1234567$API_SECRET"
Parameters - examples of parameters that can be used: asset_id(unique identifier of the asset to delete), invalidate(boolean to purge CDN cache), timestamp(current Unix timestamp), signature(SHA-1 hash of ordered parameters with API secret), api_key(your account API key), notification_url(webhook for deletion confirmation), resource_type(specify asset type - defaults to determined by asset_id)
When Not to Use: Don't use for temporary asset hiding (use access_mode changes instead), versioning control (use versions API), or when you need to maintain asset history. For bulk deletions of multiple assets, use the bulk deletion API instead of multiple single-asset delete calls.
Output: Returns a simple confirmation object indicating success or a detailed error message for failures. Success response: {"result": "ok"}. Error response example: {"error": {"message": "Invalid Signature. String to sign - 'asset_id=xyz&invalidate=true&timestamp=123'"}}
Example output: {"result": "ok"}
`,
  scopes: ["admin"],
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await assetsDestroyByAssetId(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
