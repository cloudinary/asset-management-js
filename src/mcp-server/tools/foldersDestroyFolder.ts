/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { foldersDestroyFolder } from "../../funcs/foldersDestroyFolder.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  folder: z.string(),
};

export const tool$foldersDestroyFolder: ToolDefinition<typeof args> = {
  name: "delete-folder",
  description:
    `Purpose: Permanently deletes a folder and all assets contained within it from your Cloudinary media library. This is a destructive operation that removes both the folder structure and any assets it contains.
Usage: Use this to clean up unused folders and their contents, remove deprecated organizational structures, or permanently delete entire content categories. Essential for media library maintenance and storage cleanup operations.
Example request: DELETE /folders/archived/old-campaign
Parameters: folder(full folder path to delete - required)
When Not to Use: Don't use if you only want to move or rename the folder (use move-folder instead). Avoid using this for folders containing assets you might need later, as deletion is permanent. Don't use for individual asset deletion (use delete-asset instead).
Output: Returns confirmation listing all deleted folder paths.
Example output: {"deleted":["archived/old-campaign"]}
`,
  scopes: ["librarian"],
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await foldersDestroyFolder(
      client,
      args.folder,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
