/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { assetsListResourcesByModerationKindAndStatus } from "../funcs/assetsListResourcesByModerationKindAndStatus.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Moderations extends ClientSDK {
  /**
   * Get resources by moderation kind and status
   *
   * @remarks
   * Retrieves resources matching specific moderation kind and status.
   */
  async listResourcesByModerationKindAndStatus(
    resourceType: components.ResourceTypeParameter,
    moderationKind: operations.ModerationKind,
    moderationStatus: operations.ModerationStatus,
    fields?: Array<components.FieldsSpec> | undefined,
    nextCursor?: string | undefined,
    maxResults?: number | undefined,
    direction?: components.Direction | undefined,
    options?: RequestOptions,
  ): Promise<components.ListResponse> {
    return unwrapAsync(assetsListResourcesByModerationKindAndStatus(
      this,
      resourceType,
      moderationKind,
      moderationStatus,
      fields,
      nextCursor,
      maxResults,
      direction,
      options,
    ));
  }
}
