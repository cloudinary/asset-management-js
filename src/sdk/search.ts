/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { searchSearchAssets } from "../funcs/searchSearchAssets.js";
import { searchVisualSearchAssets } from "../funcs/searchVisualSearchAssets.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Search extends ClientSDK {
  /**
   * Provides a powerful query interface to filter and retrieve assets and their details
   *
   * @remarks
   * Returns a list of resources matching the specified search criteria. The API supports a variety of search parameters and returns a JSON response with the matching resources and their details.
   */
  async searchAssets(
    request: components.SearchParameters,
    options?: RequestOptions,
  ): Promise<components.SearchResponse> {
    return unwrapAsync(searchSearchAssets(
      this,
      request,
      options,
    ));
  }

  /**
   * Finds images in your asset library based on visual similarity or content
   *
   * @remarks
   * Returns a list of resources that are visually similar to a specified image. You can provide the source image for comparison in one of three ways:
   * - Provide a URL of an image
   * - Specify the public ID or asset ID of an existing image
   * - Provide a textual description
   */
  async visualSearchAssets(
    request: components.VisualSearchParametersUnion,
    options?: RequestOptions,
  ): Promise<components.SearchResponse> {
    return unwrapAsync(searchVisualSearchAssets(
      this,
      request,
      options,
    ));
  }
}
