/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import * as operations from "../operations/index.js";

/**
 * Authentication failed.
 */
export type ListResourceTypesUnauthorizedErrorData = {
  error: operations.ListResourceTypesError;
};

/**
 * Authentication failed.
 */
export class ListResourceTypesUnauthorizedError extends Error {
  error: operations.ListResourceTypesError;

  /** The original data that was passed to this error instance. */
  data$: ListResourceTypesUnauthorizedErrorData;

  constructor(err: ListResourceTypesUnauthorizedErrorData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ListResourceTypesUnauthorizedError";
  }
}

/** @internal */
export const ListResourceTypesUnauthorizedError$inboundSchema: z.ZodType<
  ListResourceTypesUnauthorizedError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: z.lazy(() => operations.ListResourceTypesError$inboundSchema),
})
  .transform((v) => {
    return new ListResourceTypesUnauthorizedError(v);
  });

/** @internal */
export type ListResourceTypesUnauthorizedError$Outbound = {
  error: operations.ListResourceTypesError$Outbound;
};

/** @internal */
export const ListResourceTypesUnauthorizedError$outboundSchema: z.ZodType<
  ListResourceTypesUnauthorizedError$Outbound,
  z.ZodTypeDef,
  ListResourceTypesUnauthorizedError
> = z.instanceof(ListResourceTypesUnauthorizedError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: z.lazy(() => operations.ListResourceTypesError$outboundSchema),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListResourceTypesUnauthorizedError$ {
  /** @deprecated use `ListResourceTypesUnauthorizedError$inboundSchema` instead. */
  export const inboundSchema = ListResourceTypesUnauthorizedError$inboundSchema;
  /** @deprecated use `ListResourceTypesUnauthorizedError$outboundSchema` instead. */
  export const outboundSchema =
    ListResourceTypesUnauthorizedError$outboundSchema;
  /** @deprecated use `ListResourceTypesUnauthorizedError$Outbound` instead. */
  export type Outbound = ListResourceTypesUnauthorizedError$Outbound;
}
