/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AssetRelationInfo,
  AssetRelationInfo$inboundSchema,
  AssetRelationInfo$Outbound,
  AssetRelationInfo$outboundSchema,
} from "./assetrelationinfo.js";

export type AssetRelationsDeleteResponse = {
  failed?: Array<AssetRelationInfo> | undefined;
  success?: Array<AssetRelationInfo> | undefined;
};

/** @internal */
export const AssetRelationsDeleteResponse$inboundSchema: z.ZodType<
  AssetRelationsDeleteResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  failed: z.array(AssetRelationInfo$inboundSchema).optional(),
  success: z.array(AssetRelationInfo$inboundSchema).optional(),
});

/** @internal */
export type AssetRelationsDeleteResponse$Outbound = {
  failed?: Array<AssetRelationInfo$Outbound> | undefined;
  success?: Array<AssetRelationInfo$Outbound> | undefined;
};

/** @internal */
export const AssetRelationsDeleteResponse$outboundSchema: z.ZodType<
  AssetRelationsDeleteResponse$Outbound,
  z.ZodTypeDef,
  AssetRelationsDeleteResponse
> = z.object({
  failed: z.array(AssetRelationInfo$outboundSchema).optional(),
  success: z.array(AssetRelationInfo$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AssetRelationsDeleteResponse$ {
  /** @deprecated use `AssetRelationsDeleteResponse$inboundSchema` instead. */
  export const inboundSchema = AssetRelationsDeleteResponse$inboundSchema;
  /** @deprecated use `AssetRelationsDeleteResponse$outboundSchema` instead. */
  export const outboundSchema = AssetRelationsDeleteResponse$outboundSchema;
  /** @deprecated use `AssetRelationsDeleteResponse$Outbound` instead. */
  export type Outbound = AssetRelationsDeleteResponse$Outbound;
}

export function assetRelationsDeleteResponseToJSON(
  assetRelationsDeleteResponse: AssetRelationsDeleteResponse,
): string {
  return JSON.stringify(
    AssetRelationsDeleteResponse$outboundSchema.parse(
      assetRelationsDeleteResponse,
    ),
  );
}

export function assetRelationsDeleteResponseFromJSON(
  jsonString: string,
): SafeParseResult<AssetRelationsDeleteResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AssetRelationsDeleteResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AssetRelationsDeleteResponse' from JSON`,
  );
}
