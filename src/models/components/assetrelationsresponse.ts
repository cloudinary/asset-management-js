/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AssetRelationInfo,
  AssetRelationInfo$inboundSchema,
  AssetRelationInfo$Outbound,
  AssetRelationInfo$outboundSchema,
} from "./assetrelationinfo.js";

export type AssetRelationsResponse = {
  failed?: Array<AssetRelationInfo> | undefined;
  success?: Array<AssetRelationInfo> | undefined;
};

/** @internal */
export const AssetRelationsResponse$inboundSchema: z.ZodType<
  AssetRelationsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  failed: z.array(AssetRelationInfo$inboundSchema).optional(),
  success: z.array(AssetRelationInfo$inboundSchema).optional(),
});

/** @internal */
export type AssetRelationsResponse$Outbound = {
  failed?: Array<AssetRelationInfo$Outbound> | undefined;
  success?: Array<AssetRelationInfo$Outbound> | undefined;
};

/** @internal */
export const AssetRelationsResponse$outboundSchema: z.ZodType<
  AssetRelationsResponse$Outbound,
  z.ZodTypeDef,
  AssetRelationsResponse
> = z.object({
  failed: z.array(AssetRelationInfo$outboundSchema).optional(),
  success: z.array(AssetRelationInfo$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AssetRelationsResponse$ {
  /** @deprecated use `AssetRelationsResponse$inboundSchema` instead. */
  export const inboundSchema = AssetRelationsResponse$inboundSchema;
  /** @deprecated use `AssetRelationsResponse$outboundSchema` instead. */
  export const outboundSchema = AssetRelationsResponse$outboundSchema;
  /** @deprecated use `AssetRelationsResponse$Outbound` instead. */
  export type Outbound = AssetRelationsResponse$Outbound;
}

export function assetRelationsResponseToJSON(
  assetRelationsResponse: AssetRelationsResponse,
): string {
  return JSON.stringify(
    AssetRelationsResponse$outboundSchema.parse(assetRelationsResponse),
  );
}

export function assetRelationsResponseFromJSON(
  jsonString: string,
): SafeParseResult<AssetRelationsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AssetRelationsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AssetRelationsResponse' from JSON`,
  );
}
