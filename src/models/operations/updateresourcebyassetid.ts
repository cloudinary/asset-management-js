/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateResourceByAssetIdGlobals = {
  /**
   * The cloud name of your product environment.
   */
  cloudName?: string | undefined;
};

export type UpdateResourceByAssetIdRequest = {
  /**
   * The unique asset ID of the asset to update.
   */
  assetId: string;
  resourceUpdateRequest: components.ResourceUpdateRequest;
};

/** @internal */
export const UpdateResourceByAssetIdGlobals$inboundSchema: z.ZodType<
  UpdateResourceByAssetIdGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  cloud_name: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "cloud_name": "cloudName",
  });
});

/** @internal */
export type UpdateResourceByAssetIdGlobals$Outbound = {
  cloud_name?: string | undefined;
};

/** @internal */
export const UpdateResourceByAssetIdGlobals$outboundSchema: z.ZodType<
  UpdateResourceByAssetIdGlobals$Outbound,
  z.ZodTypeDef,
  UpdateResourceByAssetIdGlobals
> = z.object({
  cloudName: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    cloudName: "cloud_name",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateResourceByAssetIdGlobals$ {
  /** @deprecated use `UpdateResourceByAssetIdGlobals$inboundSchema` instead. */
  export const inboundSchema = UpdateResourceByAssetIdGlobals$inboundSchema;
  /** @deprecated use `UpdateResourceByAssetIdGlobals$outboundSchema` instead. */
  export const outboundSchema = UpdateResourceByAssetIdGlobals$outboundSchema;
  /** @deprecated use `UpdateResourceByAssetIdGlobals$Outbound` instead. */
  export type Outbound = UpdateResourceByAssetIdGlobals$Outbound;
}

export function updateResourceByAssetIdGlobalsToJSON(
  updateResourceByAssetIdGlobals: UpdateResourceByAssetIdGlobals,
): string {
  return JSON.stringify(
    UpdateResourceByAssetIdGlobals$outboundSchema.parse(
      updateResourceByAssetIdGlobals,
    ),
  );
}

export function updateResourceByAssetIdGlobalsFromJSON(
  jsonString: string,
): SafeParseResult<UpdateResourceByAssetIdGlobals, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateResourceByAssetIdGlobals$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateResourceByAssetIdGlobals' from JSON`,
  );
}

/** @internal */
export const UpdateResourceByAssetIdRequest$inboundSchema: z.ZodType<
  UpdateResourceByAssetIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  asset_id: z.string(),
  ResourceUpdateRequest: components.ResourceUpdateRequest$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "asset_id": "assetId",
    "ResourceUpdateRequest": "resourceUpdateRequest",
  });
});

/** @internal */
export type UpdateResourceByAssetIdRequest$Outbound = {
  asset_id: string;
  ResourceUpdateRequest: components.ResourceUpdateRequest$Outbound;
};

/** @internal */
export const UpdateResourceByAssetIdRequest$outboundSchema: z.ZodType<
  UpdateResourceByAssetIdRequest$Outbound,
  z.ZodTypeDef,
  UpdateResourceByAssetIdRequest
> = z.object({
  assetId: z.string(),
  resourceUpdateRequest: components.ResourceUpdateRequest$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    assetId: "asset_id",
    resourceUpdateRequest: "ResourceUpdateRequest",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateResourceByAssetIdRequest$ {
  /** @deprecated use `UpdateResourceByAssetIdRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateResourceByAssetIdRequest$inboundSchema;
  /** @deprecated use `UpdateResourceByAssetIdRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateResourceByAssetIdRequest$outboundSchema;
  /** @deprecated use `UpdateResourceByAssetIdRequest$Outbound` instead. */
  export type Outbound = UpdateResourceByAssetIdRequest$Outbound;
}

export function updateResourceByAssetIdRequestToJSON(
  updateResourceByAssetIdRequest: UpdateResourceByAssetIdRequest,
): string {
  return JSON.stringify(
    UpdateResourceByAssetIdRequest$outboundSchema.parse(
      updateResourceByAssetIdRequest,
    ),
  );
}

export function updateResourceByAssetIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateResourceByAssetIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateResourceByAssetIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateResourceByAssetIdRequest' from JSON`,
  );
}
