/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateResourceByPublicIdGlobals = {
  /**
   * The cloud name of your product environment.
   */
  cloudName?: string | undefined;
};

/**
 * The delivery type of the asset.
 */
export const UpdateResourceByPublicIdType = {
  Upload: "upload",
  Private: "private",
  Authenticated: "authenticated",
  Facebook: "facebook",
  Twitter: "twitter",
  Gravatar: "gravatar",
  Youtube: "youtube",
  Hulu: "hulu",
  Vimeo: "vimeo",
  Animoto: "animoto",
  Worldstarhiphop: "worldstarhiphop",
  Dailymotion: "dailymotion",
} as const;
/**
 * The delivery type of the asset.
 */
export type UpdateResourceByPublicIdType = ClosedEnum<
  typeof UpdateResourceByPublicIdType
>;

export type UpdateResourceByPublicIdRequest = {
  /**
   * The type the of asset.
   */
  resourceType: components.ResourceTypeParameter;
  /**
   * The delivery type of the asset.
   */
  type: UpdateResourceByPublicIdType;
  /**
   * The public ID of the asset to update.
   */
  publicId: string;
  resourceUpdateRequest: components.ResourceUpdateRequest;
};

/** @internal */
export const UpdateResourceByPublicIdGlobals$inboundSchema: z.ZodType<
  UpdateResourceByPublicIdGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  cloud_name: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "cloud_name": "cloudName",
  });
});

/** @internal */
export type UpdateResourceByPublicIdGlobals$Outbound = {
  cloud_name?: string | undefined;
};

/** @internal */
export const UpdateResourceByPublicIdGlobals$outboundSchema: z.ZodType<
  UpdateResourceByPublicIdGlobals$Outbound,
  z.ZodTypeDef,
  UpdateResourceByPublicIdGlobals
> = z.object({
  cloudName: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    cloudName: "cloud_name",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateResourceByPublicIdGlobals$ {
  /** @deprecated use `UpdateResourceByPublicIdGlobals$inboundSchema` instead. */
  export const inboundSchema = UpdateResourceByPublicIdGlobals$inboundSchema;
  /** @deprecated use `UpdateResourceByPublicIdGlobals$outboundSchema` instead. */
  export const outboundSchema = UpdateResourceByPublicIdGlobals$outboundSchema;
  /** @deprecated use `UpdateResourceByPublicIdGlobals$Outbound` instead. */
  export type Outbound = UpdateResourceByPublicIdGlobals$Outbound;
}

export function updateResourceByPublicIdGlobalsToJSON(
  updateResourceByPublicIdGlobals: UpdateResourceByPublicIdGlobals,
): string {
  return JSON.stringify(
    UpdateResourceByPublicIdGlobals$outboundSchema.parse(
      updateResourceByPublicIdGlobals,
    ),
  );
}

export function updateResourceByPublicIdGlobalsFromJSON(
  jsonString: string,
): SafeParseResult<UpdateResourceByPublicIdGlobals, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateResourceByPublicIdGlobals$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateResourceByPublicIdGlobals' from JSON`,
  );
}

/** @internal */
export const UpdateResourceByPublicIdType$inboundSchema: z.ZodNativeEnum<
  typeof UpdateResourceByPublicIdType
> = z.nativeEnum(UpdateResourceByPublicIdType);

/** @internal */
export const UpdateResourceByPublicIdType$outboundSchema: z.ZodNativeEnum<
  typeof UpdateResourceByPublicIdType
> = UpdateResourceByPublicIdType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateResourceByPublicIdType$ {
  /** @deprecated use `UpdateResourceByPublicIdType$inboundSchema` instead. */
  export const inboundSchema = UpdateResourceByPublicIdType$inboundSchema;
  /** @deprecated use `UpdateResourceByPublicIdType$outboundSchema` instead. */
  export const outboundSchema = UpdateResourceByPublicIdType$outboundSchema;
}

/** @internal */
export const UpdateResourceByPublicIdRequest$inboundSchema: z.ZodType<
  UpdateResourceByPublicIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  resource_type: components.ResourceTypeParameter$inboundSchema,
  type: UpdateResourceByPublicIdType$inboundSchema,
  public_id: z.string(),
  ResourceUpdateRequest: components.ResourceUpdateRequest$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "resource_type": "resourceType",
    "public_id": "publicId",
    "ResourceUpdateRequest": "resourceUpdateRequest",
  });
});

/** @internal */
export type UpdateResourceByPublicIdRequest$Outbound = {
  resource_type: string;
  type: string;
  public_id: string;
  ResourceUpdateRequest: components.ResourceUpdateRequest$Outbound;
};

/** @internal */
export const UpdateResourceByPublicIdRequest$outboundSchema: z.ZodType<
  UpdateResourceByPublicIdRequest$Outbound,
  z.ZodTypeDef,
  UpdateResourceByPublicIdRequest
> = z.object({
  resourceType: components.ResourceTypeParameter$outboundSchema,
  type: UpdateResourceByPublicIdType$outboundSchema,
  publicId: z.string(),
  resourceUpdateRequest: components.ResourceUpdateRequest$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    resourceType: "resource_type",
    publicId: "public_id",
    resourceUpdateRequest: "ResourceUpdateRequest",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateResourceByPublicIdRequest$ {
  /** @deprecated use `UpdateResourceByPublicIdRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateResourceByPublicIdRequest$inboundSchema;
  /** @deprecated use `UpdateResourceByPublicIdRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateResourceByPublicIdRequest$outboundSchema;
  /** @deprecated use `UpdateResourceByPublicIdRequest$Outbound` instead. */
  export type Outbound = UpdateResourceByPublicIdRequest$Outbound;
}

export function updateResourceByPublicIdRequestToJSON(
  updateResourceByPublicIdRequest: UpdateResourceByPublicIdRequest,
): string {
  return JSON.stringify(
    UpdateResourceByPublicIdRequest$outboundSchema.parse(
      updateResourceByPublicIdRequest,
    ),
  );
}

export function updateResourceByPublicIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateResourceByPublicIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateResourceByPublicIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateResourceByPublicIdRequest' from JSON`,
  );
}
