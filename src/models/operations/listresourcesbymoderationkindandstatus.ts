/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ListResourcesByModerationKindAndStatusGlobals = {
  /**
   * The cloud name of your product environment.
   */
  cloudName?: string | undefined;
};

export const ModerationKind = {
  Manual: "manual",
  Webpurify: "webpurify",
  AwsRek: "aws_rek",
  AwsRekVideo: "aws_rek_video",
  PerceptionPoint: "perception_point",
  GoogleVideoModeration: "google_video_moderation",
  Duplicate: "duplicate",
} as const;
export type ModerationKind = ClosedEnum<typeof ModerationKind>;

export const ModerationStatus = {
  Approved: "approved",
  Rejected: "rejected",
  Pending: "pending",
  Queued: "queued",
  Aborted: "aborted",
} as const;
export type ModerationStatus = ClosedEnum<typeof ModerationStatus>;

export type ListResourcesByModerationKindAndStatusRequest = {
  /**
   * The type the of asset.
   */
  resourceType: components.ResourceTypeParameter;
  moderationKind: ModerationKind;
  moderationStatus: ModerationStatus;
  fields?: Array<components.FieldsSpec> | undefined;
  /**
   * Cursor for pagination.
   */
  nextCursor?: string | undefined;
  /**
   * Maximum number of results to return (1-500).
   */
  maxResults?: number | undefined;
  /**
   * Sort direction.
   */
  direction?: components.Direction | undefined;
};

/** @internal */
export const ListResourcesByModerationKindAndStatusGlobals$inboundSchema:
  z.ZodType<
    ListResourcesByModerationKindAndStatusGlobals,
    z.ZodTypeDef,
    unknown
  > = z.object({
    cloud_name: z.string().optional(),
  }).transform((v) => {
    return remap$(v, {
      "cloud_name": "cloudName",
    });
  });

/** @internal */
export type ListResourcesByModerationKindAndStatusGlobals$Outbound = {
  cloud_name?: string | undefined;
};

/** @internal */
export const ListResourcesByModerationKindAndStatusGlobals$outboundSchema:
  z.ZodType<
    ListResourcesByModerationKindAndStatusGlobals$Outbound,
    z.ZodTypeDef,
    ListResourcesByModerationKindAndStatusGlobals
  > = z.object({
    cloudName: z.string().optional(),
  }).transform((v) => {
    return remap$(v, {
      cloudName: "cloud_name",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListResourcesByModerationKindAndStatusGlobals$ {
  /** @deprecated use `ListResourcesByModerationKindAndStatusGlobals$inboundSchema` instead. */
  export const inboundSchema =
    ListResourcesByModerationKindAndStatusGlobals$inboundSchema;
  /** @deprecated use `ListResourcesByModerationKindAndStatusGlobals$outboundSchema` instead. */
  export const outboundSchema =
    ListResourcesByModerationKindAndStatusGlobals$outboundSchema;
  /** @deprecated use `ListResourcesByModerationKindAndStatusGlobals$Outbound` instead. */
  export type Outbound = ListResourcesByModerationKindAndStatusGlobals$Outbound;
}

export function listResourcesByModerationKindAndStatusGlobalsToJSON(
  listResourcesByModerationKindAndStatusGlobals:
    ListResourcesByModerationKindAndStatusGlobals,
): string {
  return JSON.stringify(
    ListResourcesByModerationKindAndStatusGlobals$outboundSchema.parse(
      listResourcesByModerationKindAndStatusGlobals,
    ),
  );
}

export function listResourcesByModerationKindAndStatusGlobalsFromJSON(
  jsonString: string,
): SafeParseResult<
  ListResourcesByModerationKindAndStatusGlobals,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ListResourcesByModerationKindAndStatusGlobals$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ListResourcesByModerationKindAndStatusGlobals' from JSON`,
  );
}

/** @internal */
export const ModerationKind$inboundSchema: z.ZodNativeEnum<
  typeof ModerationKind
> = z.nativeEnum(ModerationKind);

/** @internal */
export const ModerationKind$outboundSchema: z.ZodNativeEnum<
  typeof ModerationKind
> = ModerationKind$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ModerationKind$ {
  /** @deprecated use `ModerationKind$inboundSchema` instead. */
  export const inboundSchema = ModerationKind$inboundSchema;
  /** @deprecated use `ModerationKind$outboundSchema` instead. */
  export const outboundSchema = ModerationKind$outboundSchema;
}

/** @internal */
export const ModerationStatus$inboundSchema: z.ZodNativeEnum<
  typeof ModerationStatus
> = z.nativeEnum(ModerationStatus);

/** @internal */
export const ModerationStatus$outboundSchema: z.ZodNativeEnum<
  typeof ModerationStatus
> = ModerationStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ModerationStatus$ {
  /** @deprecated use `ModerationStatus$inboundSchema` instead. */
  export const inboundSchema = ModerationStatus$inboundSchema;
  /** @deprecated use `ModerationStatus$outboundSchema` instead. */
  export const outboundSchema = ModerationStatus$outboundSchema;
}

/** @internal */
export const ListResourcesByModerationKindAndStatusRequest$inboundSchema:
  z.ZodType<
    ListResourcesByModerationKindAndStatusRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    resource_type: components.ResourceTypeParameter$inboundSchema,
    moderation_kind: ModerationKind$inboundSchema,
    moderation_status: ModerationStatus$inboundSchema,
    fields: z.array(components.FieldsSpec$inboundSchema).optional(),
    next_cursor: z.string().optional(),
    max_results: z.number().int().optional(),
    direction: components.Direction$inboundSchema.optional(),
  }).transform((v) => {
    return remap$(v, {
      "resource_type": "resourceType",
      "moderation_kind": "moderationKind",
      "moderation_status": "moderationStatus",
      "next_cursor": "nextCursor",
      "max_results": "maxResults",
    });
  });

/** @internal */
export type ListResourcesByModerationKindAndStatusRequest$Outbound = {
  resource_type: string;
  moderation_kind: string;
  moderation_status: string;
  fields?: Array<string> | undefined;
  next_cursor?: string | undefined;
  max_results?: number | undefined;
  direction?: string | undefined;
};

/** @internal */
export const ListResourcesByModerationKindAndStatusRequest$outboundSchema:
  z.ZodType<
    ListResourcesByModerationKindAndStatusRequest$Outbound,
    z.ZodTypeDef,
    ListResourcesByModerationKindAndStatusRequest
  > = z.object({
    resourceType: components.ResourceTypeParameter$outboundSchema,
    moderationKind: ModerationKind$outboundSchema,
    moderationStatus: ModerationStatus$outboundSchema,
    fields: z.array(components.FieldsSpec$outboundSchema).optional(),
    nextCursor: z.string().optional(),
    maxResults: z.number().int().optional(),
    direction: components.Direction$outboundSchema.optional(),
  }).transform((v) => {
    return remap$(v, {
      resourceType: "resource_type",
      moderationKind: "moderation_kind",
      moderationStatus: "moderation_status",
      nextCursor: "next_cursor",
      maxResults: "max_results",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListResourcesByModerationKindAndStatusRequest$ {
  /** @deprecated use `ListResourcesByModerationKindAndStatusRequest$inboundSchema` instead. */
  export const inboundSchema =
    ListResourcesByModerationKindAndStatusRequest$inboundSchema;
  /** @deprecated use `ListResourcesByModerationKindAndStatusRequest$outboundSchema` instead. */
  export const outboundSchema =
    ListResourcesByModerationKindAndStatusRequest$outboundSchema;
  /** @deprecated use `ListResourcesByModerationKindAndStatusRequest$Outbound` instead. */
  export type Outbound = ListResourcesByModerationKindAndStatusRequest$Outbound;
}

export function listResourcesByModerationKindAndStatusRequestToJSON(
  listResourcesByModerationKindAndStatusRequest:
    ListResourcesByModerationKindAndStatusRequest,
): string {
  return JSON.stringify(
    ListResourcesByModerationKindAndStatusRequest$outboundSchema.parse(
      listResourcesByModerationKindAndStatusRequest,
    ),
  );
}

export function listResourcesByModerationKindAndStatusRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  ListResourcesByModerationKindAndStatusRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ListResourcesByModerationKindAndStatusRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ListResourcesByModerationKindAndStatusRequest' from JSON`,
  );
}
